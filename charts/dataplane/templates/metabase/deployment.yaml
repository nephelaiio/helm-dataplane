{{- $svcPort := .Values.metabase.service.port -}}
{{- $hostname := required "metabase ingress hostname is required" .Values.metabase.ingress.hostName }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dataplane.metabase.fullname" . }}
  labels:
    {{- include "dataplane.metabase.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.metabase.replicaCount }}
  selector:
    matchLabels:
      {{- include "dataplane.metabase.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.metabase.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dataplane.metabase.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.metabase.podSecurityContext | nindent 8 }}
      containers:
        {{- if .Values.metabase.initialSetup.enabled }}
        - name: metabase-init
          securityContext:
            {{- toYaml .Values.metabase.initialSetup.securityContext | nindent 12 }}
          image: "{{ .Values.initialSetup.image.repository }}:{{ .Values.initialSetup.image.tag }}"
          imagePullPolicy: {{ .Values.metabase.initialSetup.image.pullPolicy }}
          resources:
            requests:
              cpu: 500m
              memory: 200Mi
            limits:
              cpu: 500m
              memory: 200Mi
          env:
            - name: "INIT_RETRIES"
              value: {{ .Values.metabase.initialSetup.retries }}
            - name: "INIT_BACKOFF_SECONDS"
              value: {{ .Values.metabase.initialSetup.backoffSeconds }}
            - name: "MB_SITE_URL"
              value: "https://{{ .Values.metabase.ingress.hostName }}"
            - name: "MB_ADMIN_FIRSTNAME"
              value: {{ .Values.metabase.initialSetup.user.firstName }}
            - name: "MB_ADMIN_LASTNAME"
              value: {{ .Values.metabase.initialSetup.user.lastName }}
            - name: "MB_ADMIN_EMAIL"
              value: {{ .Values.metabase.initialSetup.user.email }}
            - name: "MB_ADMIN_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ include "dataplane.metabase.setup.secret.name" . }}
                  key: adminPassword
          command: ['python', 'setup.py']
          args: ['--url=$(MB_SITE_URL)', '--setup-email=$(MB_ADMIN_EMAIL)', '--setup-firstname=$(MB_ADMIN_FIRSTNAME)', '--setup-lastname=$(MB_ADMIN_LASTNAME)', '--setup-password=$(MB_ADMIN_PASSWORD)', '--retries=$(INIT_RETRIES)', '--backoff-in-seconds=$(INIT_BACKOFF_SECONDS)']
        {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.metabase.securityContext | nindent 12 }}
          image: "{{ .Values.metabase.image.repository }}:{{ .Values.metabase.image.tag }}"
          imagePullPolicy: {{ .Values.metabase.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $svcPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.metabase.resources | nindent 12 }}
          env:
            - name: "MB_SITE_URL"
              value: "https://{{ .Values.metabase.ingress.hostName }}"
            - name: "MB_SITE_LOCALE"
              value: "en"
            - name: "MB_DB_TYPE"
              value: "postgres"
            - name: "MB_DB_HOST"
              value: {{ include "dataplane.metabase.cluster" . }}
            - name: "MB_DB_USER"
              valueFrom:
                secretKeyRef:
                  name: {{ include "dataplane.metabase.db.secret" . }}
                  key: username
            - name: "MB_DB_PASS"
              valueFrom:
                secretKeyRef:
                  name: {{ include "dataplane.metabase.db.secret" . }}
                  key: password
          {{- with .Values.metabase.podEnvironmentVars }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.metabase.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.metabase.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.metabase.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
