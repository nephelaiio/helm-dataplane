{{- $svcName :=  include "dataplane.registry.fullname" . }}
{{- $svcPort := .Values.registry.service.port -}}
{{- $bootstrapHost := include "dataplane.strimzi.kafka.bootstrap" . }}
{{- $bootstrapPort := .Values.strimzi.kafka.listener.plain.port }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $svcName }}
  labels:
    {{- include "dataplane.registry.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "dataplane.registry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.registry.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dataplane.registry.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.registry.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.registry.securityContext | nindent 12 }}
          image: "{{ .Values.registry.image.repository }}:{{ .Values.registry.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.registry.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $svcPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.registry.resources | nindent 12 }}
          env:
            - name: SCHEMA_REGISTRY_HOST_NAME
              value: schema-registry
            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              value: {{ $bootstrapHost }}:{{ $bootstrapPort }}
          {{- with .Values.registry.podEnvironmentVars }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      initContainers:
        - name: registry-init
          image: {{ .Values.busybox.image.repository }}:{{ .Values.busybox.image.tag }}
          imagePullPolicy: {{ .Values.busybox.image.pullPolicy }}
          command:
            - "sh"
            - "-c"
            - "until nc -w 1 -vz {{ $bootstrapHost }} {{ $bootstrapPort }}; do echo waiting for kafka broker ; sleep 10 ; done ;"
      {{- with .Values.registry.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.registry.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.registry.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
