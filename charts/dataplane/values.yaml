---
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

util:
  image:
    repository: nephelaiio/dataplane-util
    pullPolicy: IfNotPresent
    tag: dataplane-0.1.16
  resources: {}

cdc:
  postgres: []
  #  postgres:
  #    - hostname: "network.hostname"
  #      port: 5432
  #      id: "dbId"
  #      dbname: "sourcedb"
  #      signaling: "signaling_table"
  #      partitions:
  #        - source: "payments.*"
  #          sink: "payments"
  mysql: []

strimzi:
  kafka:
    version: "3.4.0"
    replicas: 1
    brokers: 1
    annotations: {}
    config: {}
    listener:
      plain:
        port: 9092
      tls:
        port: 9093
      external:
        port: 9094
        annotations: {}
    storage:
      size: 10Gi
      class: ""

  connect:
    image:
      repository: nephelaiio/dataplane-connect
      tag: dataplane-0.1.16
    replicas: 1
    config:
      group.id: connect-cluster
      offset.storage.topic: connect.cluster.offsets
      config.storage.topic: connect.cluster.configs
      status.storage.topic: connect.cluster.status
      config.storage.replication.factor: 1
      offset.storage.replication.factor: 1
      status.storage.replication.factor: 1
    annotations:
      strimzi.io/use-connector-resources: "true"

  zookeeper:
    replicas: 1
    storage:
      size: 10Gi
      class: ""

zalando:
  metabase:
    name: metabase
    version: 14
    loadBalancer: false
    instances: 2
    volume: 10Gi
    serviceAnnotations: {}
    allowedSourceRanges: 0.0.0.0/0
    class: ""

  warehouse:
    name: warehouse
    version: 14
    loadBalancer: false
    instances: 2
    volume: 10Gi
    serviceAnnotations: {}
    allowedSourceRanges: 0.0.0.0/0
    class: ""

metabase:
  db: dataplane

  replicaCount: 2

  admin:
    firstName: Metabase
    lastName: Admin
    email: metabase@nephelai.io

  init:
    enabled: true
    image:
      repository: nephelaiio/dataplane-util
      pullPolicy: IfNotPresent
      tag: dataplane-0.1.16
    securityContext: {}

  image:
    repository: metabase/metabase
    pullPolicy: IfNotPresent
    tag: "v0.44.6"

  ingress:
    enabled: true
    annotations: {}
    hostName: ""
    className: ""
    secretName: ""

  service:
    type: ClusterIP
    port: 3000

  podEnvironmentVars:
    - name: "MB_REDIRECT_ALL_REQUESTS_TO_HTTPS"
      value: "true"

  passwordComplexity: "strong"
  securityContext: {}
  podSecurityContext: {}
  podAnnotations: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

registry:
  image:
    repository: confluentinc/cp-schema-registry
    pullPolicy: IfNotPresent
    tag: "5.4.10"

  service:
    type: ClusterIP
    port: 8081

  probeDelay: 10

  podEnvironmentVars:
    - name: "MB_REDIRECT_ALL_REQUESTS_TO_HTTPS"
      value: "true"

  securityContext: {}
  podSecurityContext: {}
  podAnnotations: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
