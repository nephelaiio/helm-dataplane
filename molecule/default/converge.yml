---
- name: converge

  hosts: localhost

  gather_facts: false

  roles:

    - nephelaiio.plugins

  tasks:

    - name: deploy metabase helm chart
      kubernetes.core.helm:
        state: present
        name: metabase
        chart_ref: "{{ dataplane_path }}/charts/metabase"
        release_namespace: "{{ dataplane_namespace }}"
        create_namespace: true
        wait: true
        kubeconfig: "{{ k8s_kubeconfig }}"
        binary_path: "{{ k8s_helm_bin }}"
        values:
          ingress:
            hostname: "{{ dataplane_metabase_hostname }}"

    - name: deploy source postgresql db
      kubernetes.core.k8s:
        state: present
        kubeconfig: "{{ k8s_kubeconfig | default(omit) }}"
        resource_definition: "{{ _definition }}"
      vars:
        _definition: |
          apiVersion: acid.zalan.do/v1
          kind: postgresql
          metadata:
            name: {{ dataplane_src_team }}-{{ dataplane_src_db }}
            namespace: {{ dataplane_src_namespace }}
          spec:
            teamId: {{ dataplane_src_team }}
            volume:
              size: 1Gi
            numberOfInstances: 2
            allowedSourceRanges:
              - 0.0.0.0/0
            enableMasterLoadBalancer: true
            serviceAnnotations:
              metallb.universe.tf/address-pool: private
            users:
              zalando:
                - superuser
                - createdb
              {{ dataplane_src_user }}: []
            databases:
              {{ dataplane_src_db }}: {{ dataplane_src_user }}
            postgresql:
              version: "13"

    - fail:

    - name: drop database
      community.postgresql.postgresql_db:
        name: "{{ pg_test_name }}"
        state: absent
        login_user: "{{ pg_test_user }}"
        login_password: "{{ pg_test_pass }}"
        login_host: "{{ loadbalancer_ips[pg_test_host] }}"

    - name: create database
      community.postgresql.postgresql_db:
        name: "{{ pg_test_name }}"
        state: present
        login_user: "{{ pg_test_user }}"
        login_password: "{{ pg_test_pass }}"
        login_host: "{{ loadbalancer_ips[pg_test_host] }}"

    - name: create data tempdir
      ansible.builtin.tempfile:
        state: directory
        prefix: data
      register: datadir
      changed_when: false

    - block:

        - name: fetch pagila schema file
          ansible.builtin.get_url:
            url: https://github.com/devrimgunduz/pagila/raw/master/pagila-schema.sql
            dest: "{{ datadir.path }}/schema.sql"
          changed_when: false

        - name: fetch pagila data file
          ansible.builtin.get_url:
            url: https://github.com/devrimgunduz/pagila/raw/master/pagila-data.sql
            dest: "{{ datadir.path }}/data.sql"
          changed_when: false

        - name: concatenate pagila sql files
          ansible.builtin.shell: "cat {{ datadir.path }}/schema.sql {{ datadir.path }}/data.sql > {{ datadir.path }}/pagila.sql"

        - name: load pagila db data
          community.postgresql.postgresql_db:
            name: "{{ pg_test_name }}"
            state: restore
            login_user: "{{ pg_test_user }}"
            login_password: "{{ pg_test_pass }}"
            login_host: "{{ loadbalancer_ips[pg_test_host] }}"
            target: "{{ datadir.path }}/pagila.sql"
          changed_when: false

      always:

        - name: destroy data tempdir
          ansible.builtin.file:
            state: absent
            path: "{{ datadir.path }}"
          changed_when: false
