---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
    requirements-file: requirements.yml

platforms:
  - name: localhost

driver:
  name: delegated

provisioner:
  name: ansible
  config_options:
    defaults:
      callbacks_enabled: ansible.posix.profile_tasks
  inventory:
    hosts:
      all:
        vars:
          # test-only vardefs
          ansible_connection: local
          ansible_python_interpreter: python
          docker_net_addr: 172.19.0.0/16

          # k8s vardefs
          k8s_address_pool_private_iprange: 172.19.1.0/24
          k8s_address_pool_public_iprange: 172.19.2.0/24
          k8s_kubeconfig: ${MOLECULE_EPHEMERAL_DIRECTORY}/config
          k8s_certmanager_issuer_name: local
          k8s_cluster_name: molecule.nephelai.io
          k8s_metallb_speaker_secret: secret
          k8s_verifier_path: ${MOLECULE_EPHEMERAL_DIRECTORY}
          k8s_helm_bin: ${MOLECULE_EPHEMERAL_DIRECTORY}/helm
          k8s_wait_timeout: 500
          k8s_strimzi_deploy: true
          k8s_argocd_deploy: false
          k8s_longhorn_deploy: false
          k8s_awxoperator_deploy: false
          k8s_zalando_deploy: true
          k8s_nginx_deploy: true
          k8s_zalando_storage_class: standard

          # kind vardefs
          kind_bin: ${MOLECULE_EPHEMERAL_DIRECTORY}/kind
          kind_net_addr: 172.19.0.0/24
          kind_cluster_name: molecule-dataplane
          kind_kubeconfig: "{{ k8s_kubeconfig }}"
          kind_nodes: 4
          kind_registry_hostname: molecule-dataplane-registry
          kind_registry_port: 49153

          # test vardefs
          dataplane_pagila_namespace: dataplane
          dataplane_pagila_team: pagila
          dataplane_pagila_user: metabase
          dataplane_pagila_db: db
          dataplane_pagila_signaling: false
          dataplane_pagila_signal_schema: debezium
          dataplane_pagila_signal_table: signaling

          # dataplane vardefs
          dataplane_namespace: dataplane
          dataplane_chart: dataplane
          dataplane_path: ${MOLECULE_PROJECT_DIRECTORY}
          dataplane_metabase_hostname: "metabase.{{ k8s_cluster_name }}"
          dataplane_chart_values:
            util:
              image:
                repository: "{{ kind_registry_hostname }}:{{ kind_registry_port }}/nephelaiio/dataplane-util"
                tag: latest
            metabase:
              init:
                image:
                  repository: "{{ kind_registry_hostname }}:{{ kind_registry_port }}/nephelaiio/dataplane-util"
                  tag: latest
              admin:
                email: metabase@nephelai.io
                password: dataplane
              ingress:
                enabled: true
                className: nginx-private
                hostName: "{{ dataplane_metabase_hostname }}"
                annotations:
                  cert-manager.io/cluster-issuer: "{{ k8s_certmanager_issuer_name }}"
            cdc:
              postgres:
                - hostname: "{{ dataplane_pagila_team }}-{{ dataplane_pagila_db }}"
                  port: 5432
                  servername: pagila
                  dbname: "{{ dataplane_pagila_db }}"
                  signaling: "{{ dataplane_pagila_signaling }}"
            strimzi:
              connect:
                image:
                  repository: "{{ kind_registry_hostname }}:{{ kind_registry_port }}/nephelaiio/dataplane-connect"
                  tag: latest
                secret: "{{ dataplane_pagila_user }}-{{ dataplane_pagila_team }}-{{ dataplane_pagila_db }}"
                config:
                  config.storage.replication.factor: 3
                  offset.storage.replication.factor: 3
                  status.storage.replication.factor: 3
              kafka:
                replicas: 3
                brokers: 3
                storage:
                  size: 10Gi
                  class: standard
                config:
                  acks: all
                  offsets.topic.replication.factor: 3
                  transaction.state.log.replication.factor: 3
                  transaction.state.log.min.isr: 3
                  num.partitions: 3
                  default.replication.factor: 3
                  min.insync.replicas: 2
              zookeeper:
                storage:
                  size: 10Gi
                  class: standard
            zalando:
              metabase:
                instances: 1
                loadBalancer: true
                allowedSourceRanges: 0.0.0.0/0
              warehouse:
                instances: 1
                loadBalancer: true
                allowedSourceRanges: 0.0.0.0/0

verifier:
  name: ansible
