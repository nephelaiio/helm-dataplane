---
- name: Create
  hosts: localhost
  gather_facts: false
  pre_tasks:
    - name: Deploy Kind cluster
      ansible.builtin.include_role:
        name: nephelaiio.kind

    - name: Set Helm release metadata
      when: helm_release is not defined
      block:
        - name: Query Helm releases
          ansible.builtin.uri:
            url: https://api.github.com/repos/helm/helm/releases/latest
            headers: "{{ _headers }}"
          vars:
            _token: "{{ lookup('ansible.builtin.env', 'GH_TOKEN', default='') }}"
            _header_auth:
              Authorization: "Bearer {{ _token }}"
            _headers: "{{ _header_auth if _token != '' else {} }}"
          register: helm_release_query

        - name: Set Kind release target
          ansible.builtin.set_fact:
            helm_release: "{{ helm_release_query.json.tag_name }}"

      rescue:
        - name: Set Kind release to failback
          ansible.builtin.set_fact:
            helm_release: v3.11.3

  tasks:
    - name: Create temporary directory
      ansible.builtin.tempfile:
        state: directory
        prefix: kind
      register: _tmpdir
      changed_when: false

    - name: Install Helm binary
      block:
        - name: Download Helm release package
          ansible.builtin.unarchive:
            src: "https://get.helm.sh/helm-{{ helm_release }}-linux-amd64.tar.gz"
            dest: "{{ _tmpdir.path }}"
            remote_src: true
          register: helm_dl_op
          retries: 3
          delay: 10
          until: helm_dl_op is success
          changed_when: false

        - name: Find Helm executable
          ansible.builtin.find:
            paths: "{{ _tmpdir.path }}"
            file_type: file
            recurse: true
            use_regex: true
            patterns:
              - "^helm$"
          register: helm_bin

        - name: Copy Helm executable
          ansible.builtin.copy:
            src: "{{ helm_bin.files[0].path }}"
            dest: "{{ k8s_helm_bin }}"
            mode: "0755"

      always:
        - name: Cleanup temp files
          ansible.builtin.file:
            state: absent
            path: "{{ _tmpdir.path }}"

    - name: Install Helm diff plugin
      kubernetes.core.helm_plugin:
        plugin_path: https://github.com/databus23/helm-diff
        state: present
        binary_path: "{{ k8s_helm_bin }}"
      ignore_errors: true
