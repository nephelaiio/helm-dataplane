---
- name: create

  hosts: localhost

  gather_facts: false

  roles:

    - nephelaiio.plugins

  pre_tasks:

    - name: deploy kind cluster
      block:

        - name: manage docker kind network
          community.docker.docker_network:
            name: "kind"
            enable_ipv6: false
            ipam_config:
              - subnet: "{{ docker_net_addr }}"
                gateway: "{{ docker_net_addr | ipaddr(1) | ipaddr('address') }}"
                iprange: "{{ kind_net_addr }}"

        - name: deploy kind cluster
          ansible.builtin.include_role:
            name: nephelaiio.kind
          vars:
            kind_image_tag: "{{ lookup('env', 'K8S_RELEASE') }}"

      when: k8s_molecule_cluster_type == 'kind'

    - name: deploy k3s cluster
      block:

        - name: create k3s tempdir
          ansible.builtin.tempfile:
            state: directory
            prefix: "k3s_"
          register: tempdir

        - name: retrieve k3s installer
          ansible.builtin.get_url:
            url: https://get.k3s.io
            dest: "{{ tempdir.path }}/k3s"
            mode: 0755

        - name: deploy k3s cluster
          ansible.builtin.command: "{{ tempdir.path }}/k3s --disable=traefik"
          vars:
            k3s_version: "{{ lookup('env', 'K8S_RELEASE') }}+k3s1"
          environment:
            INSTALL_K3S_VERSION: "{{ k3s_version }}"
          become: true

        - name: install iscsi tools
          ansible.builtin.package:
            name: open-iscsi
          become: yes

        - name: copy k3s kubeconfig
          ansible.builtin.copy:
            src: "/etc/rancher/k3s/k3s.yaml"
            dest: "{{ k8s_kubeconfig }}"
            remote_src: true
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: 0600
          vars:
            ansible_user: "{{ lookup('env', 'USER') }}"
          become: true

        - name: remove k3s tempdir
          ansible.builtin.file:
            path: "{{ tempdir.path }}"
            state: absent

      when: k8s_molecule_cluster_type == 'k3s'

    - name: set helm release metadata
      block:

        - name: query helm releases
          ansible.builtin.uri:
            url: https://api.github.com/repos/helm/helm/releases/latest
          register: helm_release_query

        - name: set kind release target
          ansible.builtin.set_fact:
            helm_release: "{{ helm_release_query.json.tag_name }}"

      when: helm_release is not defined

  tasks:

    - name: create temporary directory
      ansible.builtin.tempfile:
        state: directory
        prefix: kind
      register: _tmpdir
      changed_when: false

    - name: install helm binary
      block:

        - name: download helm release package
          ansible.builtin.unarchive:
            src: "https://get.helm.sh/helm-{{ helm_release }}-linux-amd64.tar.gz"
            dest: "{{ _tmpdir.path }}"
            remote_src: true
          register: helm_dl_op
          retries: 3
          delay: 10
          until: helm_dl_op is success
          changed_when: false

        - name: find helm executable
          ansible.builtin.find:
            paths: "{{ _tmpdir.path }}"
            file_type: file
            recurse: true
            use_regex: true
            patterns:
              - '^helm$'
          register: helm_bin

        - name: copy helm executable
          ansible.builtin.copy:
            src: "{{ helm_bin.files[0].path }}"
            dest: "{{ k8s_helm_bin }}"
            mode: '0755'

      always:

        - name: cleanup temp files
          ansible.builtin.file:
            state: absent
            path: "{{ _tmpdir.path }}"

    - name: install helm diff plugin
      kubernetes.core.helm_plugin:
        plugin_path: https://github.com/databus23/helm-diff
        state: present
        binary_path: "{{ k8s_helm_bin }}"
      ignore_errors: true
